<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1263211_pro_bono.Get_sysId_of_selected_record</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>Get_sysId_of_selected_record</name>
        <script><![CDATA[var Get_sysId_of_selected_record = Class.create();
Get_sysId_of_selected_record.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    getSysId: function() {
        var sysId = this.getParameter('arrayId');
		var opportunity_sysId=gs.getProperty('x_1263211_pro_bono.get_sysId');
        var array_of_sys_Id = sysId.split(',');
        // gs.log('array:', array_of_sys_Id);
        for (var i = 0; i < array_of_sys_Id.length; i++) {
            var gr = new GlideRecord('x_1263211_pro_bono_timekeeper_register');
            gr.get(array_of_sys_Id[i]);
            var grc = new GlideRecord('sn_customerservice_related_party');
            grc.addQuery('x_1263211_pro_bono_opportunity', opportunity_sysId);
			grc.addQuery('x_1263211_pro_bono_timekeeper',array_of_sys_Id[i]);
            grc.query();
            if (grc.next()) {
                return;
            } else {
                grc.initialize();
				grc.x_1263211_pro_bono_opportunity=opportunity_sysId;
				grc.x_1263211_pro_bono_timekeeper=array_of_sys_Id[i];
                grc.x_1263211_pro_bono_timekeeper_name = gr.timekeeper_name;
                grc.x_1263211_pro_bono_email = gr.email;
                grc.x_1263211_pro_bono_subpractice_group = gr.sub_practice_group;
                grc.x_1263211_pro_bono_notes = gr.notes;

				
                grc.insert();
            }
        }
    },
    getIdOfselectedRecord: function() {
        var sys_Id = this.getParameter('arrayId');
        var id = gs.getProperty('x_1263211_pro_bono.get_sysId');
        var array_of_sys_Id = sys_Id.split(',');
        // gs.log('array:', array_of_sys_Id);
        for (var i = 0; i < array_of_sys_Id.length; i++) {

            var grc = new GlideRecord('x_1263211_pro_bono_m2m_x_1263211_pr_x_1263211_pr');
            grc.addQuery('x_1263211_pro_bono_staffing_requirement', array_of_sys_Id[i])
            grc.addQuery('x_1263211_pro_bono_opportunity', id);
            grc.query()
            if (grc.next()) {
                return;
            } else {
                grc.initialize();
                grc.x_1263211_pro_bono_staffing_requirement = array_of_sys_Id[i];
                grc.x_1263211_pro_bono_opportunity = id;
                grc.insert();
            }


        }

    },
    type: 'Get_sysId_of_selected_record'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-26 06:29:34</sys_created_on>
        <sys_id>9362a2eb9381021074347af08bba1084</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Get_sysId_of_selected_record</sys_name>
        <sys_package display_value="Pro Bono Opportunity" source="x_1263211_pro_bono">75e775f9930d021074347af08bba1054</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Pro Bono Opportunity">75e775f9930d021074347af08bba1054</sys_scope>
        <sys_update_name>sys_script_include_9362a2eb9381021074347af08bba1084</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-03 04:15:31</sys_updated_on>
    </sys_script_include>
</record_update>
